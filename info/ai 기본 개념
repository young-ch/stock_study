* 참고 링크 : https://www.tensorflow.org/?hl=ko

* 개념 설명
 - 인공지능
    > 기존 알고리즘은 개발자가 소프트웨어가 수신하는 각 유형의 입력값들에 대한 출력을 정의하는 특정 규칙을 설정하는 반면
      AI 알고리즘은 자체 규칙 시스템을 구축

 - 머신러닝
    > 머신러닝은 제공되는 데이터를 기반으로 컴퓨터를 학습시켜서 무언가를 예측하게 만드는 기법.
      즉 컴퓨터에게 여러가지 예제 데이터를 주고 스스로 학습하여 프로그램을 작성하도록 하자는 것

 - 딥러닝
    > 딥러닝(Deep Learning)이란 머신 러닝(Machine Learning)중에서도
      인공 신경망을 이용해 학습을 하는 러닝의 종류를 의미.

 - 머신러닝, 딥러닝 차이
    > 머신러닝과 가장 큰 차이점은 딥러닝은 분류에 사용할 데이터를 스스로 학습할 수 있는 반면
      머신 러닝은 학습 데이터를 수동으로 제공해야한다는 점이 딥러닝과 머신러닝의 가장 큰 차이점

  ** 인공 지능이 가장 큰 원이고, 그 다음이 머신 러닝이며, 현재의 인공지능 붐을 주도하는 딥 러닝이 가장 작은 원

 - 텐서플로우
    > 머신러닝, 딥러닝을 위한 라이브러리가 많이 있는데, 파이썬에서는 텐서플로우(Tensorflow) 또는
      테아노(Theano)같은 오픈소스 라이브러리들이 존재.
      하지만 이 라이브러리들은 파라미터나 설정 등이 너무 복잡해서 초보자가 사용하기 어렵다.
      그래서 사람들이 Keras라는 라이브러리를 만들어 쉽게 인공신경망을 만들 수 있게 했다.
    > 독자적으로 사용 가능
    > C / C++ 엔진에 python api로 작성되어 있음
    > 구글에서 만든 라이브러리(오픈소스), 2015년 오픈 소스로 공개

 - keras
    > Keras 패키지는 Theano 또는 TensorFlow를 계산 엔진으로 사용하는 파이썬 패키지 
    > 많은 이들이 딥러닝을 쉽게 접할 수 있도록 구현
    > 다양한 플랫폼 위에서 딥러닝 모델을 만들 수 있는 API
    > python 으로 만들어진 라이브러리(오픈소스)
    > tensorflow를 백엔드로 사용하는 딥러닝 라이브러리
    > 비교적 단순한 신경망을 구성하거나 기존의 갖추어진 기능만을 사용한다면 Keras만으로 충분
    > 내부적으로는 텐서플로우(TensorFlow), 티아노(Theano), CNTK 등의 딥러닝 전용 엔진이 구동되지만
    케라스 사용자는 복잡한 내부 엔진을 알 필요는 없음

 - LSTM : 딥러닝 모델 중 하나
    > 우리는 LSTM(Long Short Term Memory) 모델을 사용
    > LSTM을 사용하려는 이유는 주가 데이터가 순서가 있는 시계열(Time-series) 데이터이기 때문
    > LSTM은 RNN(Recurrent Neural Network)의 일종입니다. RNN은 학습을 할 때 현재 입력값뿐만 아니라
      이전에 들어온 입력값을 함께 고려하기 때문에 시계열 데이터를 학습하기에 적합
    > keras 라이브러리로 구현 가능






